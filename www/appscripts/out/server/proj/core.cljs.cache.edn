;; Analyzed by ClojureScript 0.0-3196
{:defs {knobbificationAI {:protocol-inline nil, :meta {:arglists (quote ([scoreEvents])), :export true, :end-column 32, :end-line 20, :column 16, :line 20, :file "/home/prashanth/Desktop/node-cljs/proj/src/server/proj/core.cljs"}, :name proj.core/knobbificationAI, :variadic false, :file "src/server/proj/core.cljs", :end-column 32, :method-params ([scoreEvents]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([scoreEvents])), :test true}, start_t {:protocol-inline nil, :meta {:arglists (quote ([])), :export true, :end-column 23, :end-line 53, :column 16, :line 53, :file "/home/prashanth/Desktop/node-cljs/proj/src/server/proj/core.cljs"}, :name proj.core/start_t, :variadic false, :file "src/server/proj/core.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, end_t {:protocol-inline nil, :meta {:arglists (quote ([st])), :export true, :end-column 21, :end-line 59, :column 16, :line 59, :file "/home/prashanth/Desktop/node-cljs/proj/src/server/proj/core.cljs"}, :name proj.core/end_t, :variadic false, :file "src/server/proj/core.cljs", :end-column 21, :method-params ([st]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 1, :fn-var true, :arglists (quote ([st])), :test true}, start {:protocol-inline nil, :meta {:arglists (quote ([])), :export true, :end-column 21, :end-line 35, :column 16, :line 35, :file "/home/prashanth/Desktop/node-cljs/proj/src/server/proj/core.cljs"}, :name proj.core/start, :variadic false, :file "src/server/proj/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, selfwatchingAI {:protocol-inline nil, :meta {:arglists (quote ([scoreEvents])), :export true, :end-column 30, :end-line 28, :column 16, :line 28, :file "/home/prashanth/Desktop/node-cljs/proj/src/server/proj/core.cljs"}, :name proj.core/selfwatchingAI, :variadic false, :file "src/server/proj/core.cljs", :end-column 30, :method-params ([scoreEvents]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([scoreEvents])), :test true}, analogyAI {:protocol-inline nil, :meta {:arglists (quote ([scoreEvents])), :export true, :end-column 25, :end-line 24, :column 16, :line 24, :file "/home/prashanth/Desktop/node-cljs/proj/src/server/proj/core.cljs"}, :name proj.core/analogyAI, :variadic false, :file "src/server/proj/core.cljs", :end-column 25, :method-params ([scoreEvents]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([scoreEvents])), :test true}, end_y {:protocol-inline nil, :meta {:arglists (quote ([st])), :export true, :end-column 21, :end-line 68, :column 16, :line 68, :file "/home/prashanth/Desktop/node-cljs/proj/src/server/proj/core.cljs"}, :name proj.core/end_y, :variadic false, :file "src/server/proj/core.cljs", :end-column 21, :method-params ([st]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 1, :fn-var true, :arglists (quote ([st])), :test true}, start_y {:protocol-inline nil, :meta {:arglists (quote ([])), :export true, :end-column 23, :end-line 73, :column 16, :line 73, :file "/home/prashanth/Desktop/node-cljs/proj/src/server/proj/core.cljs"}, :name proj.core/start_y, :variadic false, :file "src/server/proj/core.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, combinationalAI {:protocol-inline nil, :meta {:arglists (quote ([scoreEvents])), :export true, :end-column 31, :end-line 16, :column 16, :line 16, :file "/home/prashanth/Desktop/node-cljs/proj/src/server/proj/core.cljs"}, :name proj.core/combinationalAI, :variadic false, :file "src/server/proj/core.cljs", :end-column 31, :method-params ([scoreEvents]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([scoreEvents])), :test true}, k_max_d {:meta {:export true, :end-column 22, :end-line 44, :column 15, :line 44, :file "/home/prashanth/Desktop/node-cljs/proj/src/server/proj/core.cljs"}, :file "src/server/proj/core.cljs", :line 44, :column 1, :end-line 44, :end-column 22, :export true, :test true, :name proj.core/k_max_d}, k_min_d {:meta {:export true, :end-column 22, :end-line 48, :column 15, :line 48, :file "/home/prashanth/Desktop/node-cljs/proj/src/server/proj/core.cljs"}, :file "src/server/proj/core.cljs", :line 48, :column 1, :end-line 48, :end-column 22, :export true, :test true, :name proj.core/k_min_d}, d {:protocol-inline nil, :meta {:arglists (quote ([tso])), :export true, :end-column 17, :end-line 80, :column 16, :line 80, :file "/home/prashanth/Desktop/node-cljs/proj/src/server/proj/core.cljs"}, :name proj.core/d, :variadic false, :file "src/server/proj/core.cljs", :end-column 17, :method-params ([tso]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tso])), :test true}}, :imports nil, :requires {selfwatch server.AIagent.self-watching, clojure.browser.repl clojure.browser.repl, server.AIagent.analogy server.AIagent.analogy, server.AIagent.combination server.AIagent.combination, server.AIagent.knobbification server.AIagent.knobbification, server.AIagent.self-watching server.AIagent.self-watching, server.AIagent.subsumption server.AIagent.subsumption, knobbification server.AIagent.knobbification, server.utilities server.utilities, subsumption server.AIagent.subsumption, combination server.AIagent.combination, repl clojure.browser.repl, analogy server.AIagent.analogy}, :uses nil, :require-macros nil, :use-macros nil, :excludes #{}, :doc nil, :name proj.core}